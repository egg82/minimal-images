FROM registry.access.redhat.com/ubi9 AS builder

ARG APP_VERSION
ARG TARGETARCH
ARG TARGETVARIANT

USER root

RUN dnf install -y curl-minimal bash \
  && dnf clean all \
  && rm -rf /var/cache/dnf

WORKDIR /install

RUN set -eux; \
  case "${TARGETARCH}/${TARGETVARIANT}" in \
    amd64/*) APP_ARCH="x86_64" ;; \
    arm64/*) APP_ARCH="aarch64" ;; \
    arm/v7) APP_ARCH="armv7" ;; \
    386/*) APP_ARCH="x86" ;; \
    riscv64/*) APP_ARCH="riscv64" ;; \
    *) echo "Unsupported arch: ${TARGETARCH}/${TARGETVARIANT}" >&2; exit 1 ;; \
  esac; \
  curl -sSL https://github.com/userdocs/qbittorrent-nox-static/releases/download/release-${APP_VERSION}/${APP_ARCH}-qbittorrent-nox -o qbittorrent-nox

RUN mkdir -p /rt \
  && for bin in curl bash sh; do \
      path="$(which "$bin")"; \
      cp -p --parents "$path" /rt; \
    done \
  && for bin in curl bash sh; do \
      path="$(which "$bin")"; \
      ldd "$path" 2>/dev/null | awk '/=>/ {print $(NF-1)}' | grep '^/' | xargs -r -I{} cp -p --parents {} /rt; \
    done

FROM registry.access.redhat.com/ubi9-micro

ARG USER=app
ENV UID=1000
ENV GID=1000

USER root

COPY --from=builder /rt/ /rt/
RUN for src in /rt/*; do \
      tgt="/${src#/rt/}"; \
      if [ -d "$src" ]; then \
        mkdir -p "$tgt"; \
        cp -apn "$src"/. "$tgt"/; \
      else \
        mkdir -p "$(dirname "$tgt")"; \
        cp -pn "$src" "$tgt"; \
      fi; \
    done \
  && rm -rf /rt

RUN echo "${USER}:x:${UID}:" >> /etc/group \
  && echo "${USER}:x:${UID}:${GID}::/app:/bin/bash" >> /etc/passwd

ENV HOME="/config" \
  XDG_CONFIG_HOME="/config" \
  XDG_DATA_HOME="/config"

WORKDIR /app
COPY --from=builder /install/qbittorrent-nox /app/
COPY entrypoint.sh /app/

RUN chown -R "${UID}":"${GID}" /app \
  && chmod +x /app/entrypoint.sh \
  && chmod +x /app/qbittorrent-nox

USER ${UID}

EXPOSE 8080

VOLUME /config

ENTRYPOINT ["/app/entrypoint.sh"]
