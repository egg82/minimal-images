FROM registry.access.redhat.com/ubi9 AS builder

ARG APP_VERSION

USER root

RUN dnf install -y git curl-minimal bash \
  && dnf clean all \
  && rm -rf /var/cache/dnf

WORKDIR /install

RUN curl -sSLO https://downloads.plex.tv/plex-media-server-new/${APP_VERSION}/redhat/plexmediaserver-${APP_VERSION}.x86_64.rpm \
  && rpm -Uvh --nodeps --noscripts --nosignature ./plexmediaserver-${APP_VERSION}.x86_64.rpm \
  && rm -f ./plexmediaserver-${APP_VERSION}.x86_64.rpm

ENV PATH="${PATH}:/usr/lib/plexmediaserver"

RUN mkdir -p /rt \
  && for bin in curl bash sh; do \
      path="$(which "$bin")"; \
      cp -p --parents "$path" /rt; \
    done \
  && for bin in CrashUploader "Plex Commercial Skipper" "Plex DLNA Server" \
    "Plex Media Fingerprinter" "Plex Media Scanner" "Plex Media Server" \
    "Plex Relay" "Plex Script Host" "Plex SQLite" "Plex Transcoder" \
    "Plex Tuner Service" curl bash sh; do \
      path="$(which "$bin")"; \
      ldd "$path" 2>/dev/null | awk '/=>/ {print $(NF-1)}' | grep '^/' | xargs -r -I{} cp -p --parents {} /rt; \
    done \
  && cp -rp --parents /usr/lib/plexmediaserver /rt

FROM registry.access.redhat.com/ubi9-micro

ARG USER=app
ENV UID=1000
ENV GID=1000

USER root

COPY --from=builder /rt/ /rt/
RUN for src in /rt/*; do \
      tgt="/${src#/rt/}"; \
      if [ -d "$src" ]; then \
        mkdir -p "$tgt"; \
        cp -apn "$src"/. "$tgt"/; \
      else \
        mkdir -p "$(dirname "$tgt")"; \
        cp -pn "$src" "$tgt"; \
      fi; \
    done \
  && rm -rf /rt

RUN echo "${USER}:x:${UID}:" >> /etc/group \
  && echo "${USER}:x:${UID}:${GID}::/app:/bin/bash" >> /etc/passwd

ENV PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR="/config/Library/Application Support" \
  PLEX_MEDIA_SERVER_HOME="/usr/lib/plexmediaserver" \
  PLEX_MEDIA_SERVER_MAX_PLUGIN_PROCS="6" \
  PLEX_MEDIA_SERVER_MAX_STACK_SIZE="3000" \
  PLEX_MEDIA_SERVER_USER="app" \
  PLEX_MEDIA_SERVER_INFO_VENDOR="Docker" \
  PLEX_MEDIA_SERVER_INFO_DEVICE="Docker Container" \
  NVIDIA_DRIVER_CAPABILITIES="compute,video,utility,graphics"

WORKDIR /app
COPY entrypoint.sh /app/

RUN chown -R "${UID}":"${GID}" /app \
  && chmod +x /app/entrypoint.sh \
  && chown -R "${UID}":"${GID}" /usr/lib/plexmediaserver

USER ${UID}

EXPOSE 32400/tcp 8324/tcp 32469/tcp 1900/udp 32410/udp 32412/udp 32413/udp 32414/udp

VOLUME /config

ENTRYPOINT ["/app/entrypoint.sh"]
