FROM registry.access.redhat.com/ubi9 AS builder

ARG APP_VERSION

ARG USER=app
ARG UID=1000
ARG GID=1000

USER root

RUN dnf install -y git curl-minimal bash \
    python3 python3-pip binutils \
  && dnf clean all \
  && rm -rf /var/cache/dnf

WORKDIR /install

ENV FLASK_ENV=production
ENV PYTHONOPTIMIZE=2

RUN git clone https://github.com/plexguide/Huntarr.io.git . \
  && git checkout ${APP_VERSION} && rm -rf .git \
  && python3 -m pip install --no-cache-dir -r requirements.txt \
  && flags=$(grep -v '^\s*#' requirements.txt | sed 's/\[.*\]//' | sed -e 's/;.*//' -e 's/[<>=!].*$//' | awk '{print tolower($0)}' | xargs -I{} printf " --hidden-import={} --collect-all={}" ) \
  && python3 -m pip install --no-cache-dir pyinstaller && python3 -OO -m PyInstaller --strip --noupx $flags main.py \
  && cp -rp frontend/templates dist/main/ && cp -rp frontend/static dist/main/ \
  && cp -rp src dist/main/_internal/ && cp -p version.txt dist/main/_internal/ && cp -p manifest.json dist/main/_internal/

ENV PATH="${PATH}:/install/dist/main"

RUN mkdir -p /rt \
  && for bin in main curl bash sh env coreutils; do \
      path="$(which "$bin")"; \
      cp -p --parents "$path" /rt; \
    done \
  && for bin in main python3 curl bash sh env coreutils; do \
      path="$(which "$bin")"; \
      ldd "$path" 2>/dev/null | awk '/=>/ {print $(NF-1)}' | grep '^/' | xargs -r -I{} cp -p --parents {} /rt; \
    done \
  && rm -rf /rt/install \
  && cp -p --parents /etc/pki/tls/cert.pem /rt \
  && cp -p --parents /etc/crypto-policies/back-ends/opensslcnf.config /rt \
  && cp -p --parents /etc/crypto-policies/config /rt \
  && loader="$(ldd "$(which bash)" | awk '/ld-linux/ {print $1}')" \
  && [ -n "$loader" ] \
  && cp -p --parents "$loader" /rt

COPY entrypoint.sh /install/dist/main/
RUN chown -R "${UID}":"${GID}" /install/dist/main \
  && chmod +x /install/dist/main/entrypoint.sh \
  && cp -rp /install/dist/main /rt/app

RUN mkdir -p /rt/etc \
  && echo "${USER}:x:${UID}:" >> /etc/group \
  && echo "${USER}:x:${UID}:${GID}::/app:/bin/bash" >> /etc/passwd

RUN mkdir -p /rt/tmp \
  && chmod 777 /rt/tmp

FROM scratch

ARG USER=app
ENV UID=1000
ENV GID=1000

COPY --from=builder /rt/ /

ENV PATH="/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin"
ENV FLASK_ENV=production
ENV PYTHONOPTIMIZE=2

WORKDIR /app

USER ${UID}

EXPOSE 9705

VOLUME /config

ENTRYPOINT ["/app/entrypoint.sh"]
